{
	"name": "DF_Dim_Customer",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText7",
						"type": "DatasetReference"
					},
					"name": "sourceDimCustomer"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SnowflakeTable6",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "surrogatekey"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"parameters{",
				"     id as string ('10'),",
				"     CreateDate as date (currentDate())",
				"}",
				"source(output(",
				"          customerid as short,",
				"          CustomerName as string,",
				"          billTo as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sourceDimCustomer",
				"sourceDimCustomer keyGenerate(output(Customer_SK as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogatekey",
				"surrogatekey derive(pid = $id,",
				"          Load_Date = $CreateDate) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          CUSTOMER_SK as decimal(38,0),",
				"          CUSTOMER_ID as decimal(38,0),",
				"          CUSTOMER_NAME as string,",
				"          BILLTO as string,",
				"          DI_CREATEDDT as timestamp,",
				"          PID as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     stageInsert: true,",
				"     mapColumn(",
				"          CUSTOMER_SK = Customer_SK,",
				"          CUSTOMER_ID = customerid,",
				"          CUSTOMER_NAME = CustomerName,",
				"          BILLTO = billTo,",
				"          DI_CREATEDDT = Load_Date,",
				"          PID = pid",
				"     )) ~> sink1"
			]
		}
	}
}